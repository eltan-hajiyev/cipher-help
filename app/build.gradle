/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.13/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit test framework.
    testImplementation libs.junit

    implementation 'com.google.protobuf:protobuf-java:4.29.3'
    implementation 'commons-codec:commons-codec:1.18.0'
// https://mvnrepository.com/artifact/org.apache.commons/commons-compress
    // implementation 'org.apache.commons:commons-compress:1.27.1'
    //  implementation 'org.apache.commons:commons-imaging:1.0.0-alpha5'
//    implementation 'org.apache.orc:orc-core:2.1.0'
// https://mvnrepository.com/artifact/com.helger.commons/ph-commons
    implementation 'com.helger.commons:ph-commons:11.2.0'

    implementation 'org.projectlombok:lombok:1.18.36'
    annotationProcessor 'org.projectlombok:lombok:1.18.36'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.36'
// https://mvnrepository.com/artifact/org.apache.commons/commons-collections4
    implementation 'org.apache.commons:commons-collections4:4.4'

    // This dependency is used by the application.
    implementation libs.guava
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'org.example.App'
}
